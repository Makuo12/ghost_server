version: "3.7"
services:
  postgres:
    container_name: 'postgres_flex'
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Si73gangan
      - POSTGRES_DB=flex_server
    ports:
      - 5105:5432
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    container_name: 'redis_flex'
    image: 'redis:6.2-alpine'
    command: redis-server /var/lib/redis/config/redis.conf --requirepass Si73gangan
    ports:
      - '6379:6379'
    volumes:
      - 'redisdata:/var/lib/redis/data'
      - $PWD/redis.conf:/var/lib/redis/config/redis.conf
    networks:
      - app-network
  api:
    container_name: 'api'
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_SOURCE=postgresql://postgres:Si73gangan@postgres:5432/flex_server?sslmode=disable
    depends_on:
      - postgres
      - redis
    ports:
      - "8080:8080"
    entrypoint: [ "/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh" ]
    command: [ "/app/main" ]
    restart: unless-stopped
    networks:
      - app-network
  caddy:
    image: caddy/caddy:2.2.1-alpine
    container_name: caddy-service
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "80:80"
      - "443:443"
    volumes:            
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - $PWD/site:/srv
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app-network
  #nginx:
  #  build: ./nginx
  #  image: nginx
  #  container_name: "nginx_cont"
  #  ports:
  #    - 80:80
  #  depends_on:
  #    - api
  #  networks:
  #    - app-network
networks:
  app-network:
    driver: bridge

volumes:
  data:
  redisdata:
  caddy_data:
  caddy_config: