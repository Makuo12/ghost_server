// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: charge_references.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createChargeReference = `-- name: CreateChargeReference :one
INSERT INTO charge_references (
    user_id,
    reason,
    charge,
    currency,
    is_complete,
    reference
) VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, user_id, reference, reason, is_complete, charge, currency, created_at, updated_at
`

type CreateChargeReferenceParams struct {
	UserID     uuid.UUID `json:"user_id"`
	Reason     string    `json:"reason"`
	Charge     int64     `json:"charge"`
	Currency   string    `json:"currency"`
	IsComplete bool      `json:"is_complete"`
	Reference  uuid.UUID `json:"reference"`
}

func (q *Queries) CreateChargeReference(ctx context.Context, arg CreateChargeReferenceParams) (ChargeReference, error) {
	row := q.db.QueryRow(ctx, createChargeReference,
		arg.UserID,
		arg.Reason,
		arg.Charge,
		arg.Currency,
		arg.IsComplete,
		arg.Reference,
	)
	var i ChargeReference
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Reference,
		&i.Reason,
		&i.IsComplete,
		&i.Charge,
		&i.Currency,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateChargeReferenceComplete = `-- name: UpdateChargeReferenceComplete :one
UPDATE charge_references 
SET
    is_complete = $1,
    updated_at = NOW()
WHERE user_id = $2 AND reference = $3
RETURNING id, user_id, reference, reason, is_complete, charge, currency, created_at, updated_at
`

type UpdateChargeReferenceCompleteParams struct {
	IsComplete bool      `json:"is_complete"`
	UserID     uuid.UUID `json:"user_id"`
	Reference  uuid.UUID `json:"reference"`
}

func (q *Queries) UpdateChargeReferenceComplete(ctx context.Context, arg UpdateChargeReferenceCompleteParams) (ChargeReference, error) {
	row := q.db.QueryRow(ctx, updateChargeReferenceComplete, arg.IsComplete, arg.UserID, arg.Reference)
	var i ChargeReference
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Reference,
		&i.Reason,
		&i.IsComplete,
		&i.Charge,
		&i.Currency,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
