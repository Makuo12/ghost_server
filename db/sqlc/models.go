// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package db

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Account struct {
	ID        uuid.UUID `json:"id"`
	UserID    uuid.UUID `json:"user_id"`
	Currency  string    `json:"currency"`
	Balance   int64     `json:"balance"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type AccountNumber struct {
	ID            uuid.UUID `json:"id"`
	UserID        uuid.UUID `json:"user_id"`
	AccountNumber string    `json:"account_number"`
	Currency      string    `json:"currency"`
	AccountName   string    `json:"account_name"`
	RecipientCode string    `json:"recipient_code"`
	BankName      string    `json:"bank_name"`
	BankCode      string    `json:"bank_code"`
	Country       string    `json:"country"`
	Type          string    `json:"type"`
	BankID        int32     `json:"bank_id"`
}

type Amenity struct {
	ID                 uuid.UUID `json:"id"`
	OptionID           uuid.UUID `json:"option_id"`
	Tag                string    `json:"tag"`
	AmType             string    `json:"am_type"`
	HasAm              bool      `json:"has_am"`
	TimeSet            bool      `json:"time_set"`
	LocationOption     string    `json:"location_option"`
	SizeOption         int32     `json:"size_option"`
	PrivacyOption      string    `json:"privacy_option"`
	TimeOption         string    `json:"time_option"`
	StartTime          time.Time `json:"start_time"`
	EndTime            time.Time `json:"end_time"`
	AvailabilityOption string    `json:"availability_option"`
	StartMonth         string    `json:"start_month"`
	EndMonth           string    `json:"end_month"`
	TypeOption         string    `json:"type_option"`
	PriceOption        string    `json:"price_option"`
	BrandOption        string    `json:"brand_option"`
	ListOptions        []string  `json:"list_options"`
	CreatedAt          time.Time `json:"created_at"`
	UpdatedAt          time.Time `json:"updated_at"`
}

type BookRequirement struct {
	OptionID     uuid.UUID `json:"option_id"`
	Email        bool      `json:"email"`
	PhoneNumber  bool      `json:"phone_number"`
	Rules        bool      `json:"rules"`
	PaymentInfo  bool      `json:"payment_info"`
	ProfilePhoto bool      `json:"profile_photo"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}

type CancelPolicy struct {
	OptionID       uuid.UUID `json:"option_id"`
	TypeOne        string    `json:"type_one"`
	TypeTwo        string    `json:"type_two"`
	RequestARefund bool      `json:"request_a_refund"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
}

type Cancellation struct {
	ChargeID       uuid.UUID `json:"charge_id"`
	Type           string    `json:"type"`
	MainOptionType string    `json:"main_option_type"`
	ChargeType     string    `json:"charge_type"`
	CancelUserID   uuid.UUID `json:"cancel_user_id"`
	ReasonOne      string    `json:"reason_one"`
	ReasonTwo      string    `json:"reason_two"`
	Message        string    `json:"message"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
}

type Card struct {
	ID                uuid.UUID `json:"id"`
	UserID            uuid.UUID `json:"user_id"`
	Email             string    `json:"email"`
	Currency          string    `json:"currency"`
	AuthorizationCode string    `json:"authorization_code"`
	CardType          string    `json:"card_type"`
	Last4             string    `json:"last4"`
	ExpMonth          string    `json:"exp_month"`
	ExpYear           string    `json:"exp_year"`
	Bank              string    `json:"bank"`
	CountryCode       string    `json:"country_code"`
	Reusable          bool      `json:"reusable"`
	Channel           string    `json:"channel"`
	CardSignature     string    `json:"card_signature"`
	AccountName       string    `json:"account_name"`
	Bin               string    `json:"bin"`
	CreatedAt         time.Time `json:"created_at"`
	UpdatedAt         time.Time `json:"updated_at"`
}

type ChargeDateReference struct {
	ID                  uuid.UUID `json:"id"`
	ChargeEventID       uuid.UUID `json:"charge_event_id"`
	EventDateID         uuid.UUID `json:"event_date_id"`
	StartDate           time.Time `json:"start_date"`
	EndDate             time.Time `json:"end_date"`
	DateBooked          time.Time `json:"date_booked"`
	StartTime           string    `json:"start_time"`
	EndTime             string    `json:"end_time"`
	TotalDateFee        int64     `json:"total_date_fee"`
	TotalDateServiceFee int64     `json:"total_date_service_fee"`
	TotalDateAbsorbFee  int64     `json:"total_date_absorb_fee"`
	CreatedAt           time.Time `json:"created_at"`
	UpdatedAt           time.Time `json:"updated_at"`
}

type ChargeEventReference struct {
	ID               uuid.UUID `json:"id"`
	UserID           uuid.UUID `json:"user_id"`
	OptionUserID     uuid.UUID `json:"option_user_id"`
	TotalFee         int64     `json:"total_fee"`
	ServiceFee       int64     `json:"service_fee"`
	TotalAbsorbFee   int64     `json:"total_absorb_fee"`
	Currency         string    `json:"currency"`
	DateBooked       time.Time `json:"date_booked"`
	CanInstantBook   bool      `json:"can_instant_book"`
	RequireRequest   bool      `json:"require_request"`
	RequestType      string    `json:"request_type"`
	Reference        string    `json:"reference"`
	PaymentReference string    `json:"payment_reference"`
	RequestApproved  bool      `json:"request_approved"`
	IsComplete       bool      `json:"is_complete"`
	CreatedAt        time.Time `json:"created_at"`
	UpdatedAt        time.Time `json:"updated_at"`
}

type ChargeOptionReference struct {
	ID               uuid.UUID `json:"id"`
	UserID           uuid.UUID `json:"user_id"`
	OptionUserID     uuid.UUID `json:"option_user_id"`
	Discount         string    `json:"discount"`
	MainPrice        int64     `json:"main_price"`
	ServiceFee       int64     `json:"service_fee"`
	TotalFee         int64     `json:"total_fee"`
	DatePrice        []string  `json:"date_price"`
	Guests           []string  `json:"guests"`
	DateBooked       time.Time `json:"date_booked"`
	Currency         string    `json:"currency"`
	StartDate        time.Time `json:"start_date"`
	EndDate          time.Time `json:"end_date"`
	GuestFee         int64     `json:"guest_fee"`
	PetFee           int64     `json:"pet_fee"`
	CleanFee         int64     `json:"clean_fee"`
	NightlyPetFee    int64     `json:"nightly_pet_fee"`
	NightlyGuestFee  int64     `json:"nightly_guest_fee"`
	CanInstantBook   bool      `json:"can_instant_book"`
	RequireRequest   bool      `json:"require_request"`
	RequestType      string    `json:"request_type"`
	Reference        string    `json:"reference"`
	PaymentReference string    `json:"payment_reference"`
	RequestApproved  bool      `json:"request_approved"`
	IsComplete       bool      `json:"is_complete"`
	Cancelled        bool      `json:"cancelled"`
	CreatedAt        time.Time `json:"created_at"`
	UpdatedAt        time.Time `json:"updated_at"`
}

type ChargeReference struct {
	ID         uuid.UUID `json:"id"`
	UserID     uuid.UUID `json:"user_id"`
	Reference  uuid.UUID `json:"reference"`
	Reason     string    `json:"reason"`
	IsComplete bool      `json:"is_complete"`
	Charge     int64     `json:"charge"`
	Currency   string    `json:"currency"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
}

type ChargeReview struct {
	ChargeID      uuid.UUID `json:"charge_id"`
	Type          string    `json:"type"`
	General       int32     `json:"general"`
	Environment   int32     `json:"environment"`
	Accuracy      int32     `json:"accuracy"`
	CheckIn       int32     `json:"check_in"`
	Communication int32     `json:"communication"`
	IsPublished   bool      `json:"is_published"`
	Location      int32     `json:"location"`
	CurrentState  string    `json:"current_state"`
	PreviousState string    `json:"previous_state"`
	Status        string    `json:"status"`
	PrivateNote   string    `json:"private_note"`
	PublicNote    string    `json:"public_note"`
	StayClean     string    `json:"stay_clean"`
	StayComfort   string    `json:"stay_comfort"`
	HostReview    string    `json:"host_review"`
	Amenities     []string  `json:"amenities"`
	CreatedAt     time.Time `json:"created_at"`
	UpdatedAt     time.Time `json:"updated_at"`
}

type ChargeTicketReference struct {
	ID           uuid.UUID `json:"id"`
	ChargeDateID uuid.UUID `json:"charge_date_id"`
	TicketID     uuid.UUID `json:"ticket_id"`
	Grade        string    `json:"grade"`
	Type         string    `json:"type"`
	DateBooked   time.Time `json:"date_booked"`
	Price        int64     `json:"price"`
	ServiceFee   int64     `json:"service_fee"`
	AbsorbFee    int64     `json:"absorb_fee"`
	TicketType   string    `json:"ticket_type"`
	GroupPrice   int64     `json:"group_price"`
	Gifted       string    `json:"gifted"`
	Cancelled    bool      `json:"cancelled"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}

type CheckInOutDetail struct {
	OptionID               uuid.UUID `json:"option_id"`
	ArriveAfter            string    `json:"arrive_after"`
	ArriveBefore           string    `json:"arrive_before"`
	LeaveBefore            string    `json:"leave_before"`
	RestrictedCheckInDays  []string  `json:"restricted_check_in_days"`
	RestrictedCheckOutDays []string  `json:"restricted_check_out_days"`
	CreatedAt              time.Time `json:"created_at"`
	UpdatedAt              time.Time `json:"updated_at"`
}

type CheckInStep struct {
	ID        uuid.UUID `json:"id"`
	OptionID  uuid.UUID `json:"option_id"`
	Photo     string    `json:"photo"`
	Des       string    `json:"des"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type CompleteChargeReview struct {
	ChargeReviewID uuid.UUID `json:"charge_review_id"`
	CurrentState   string    `json:"current_state"`
	PreviousState  string    `json:"previous_state"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
}

type CompleteOptionInfo struct {
	OptionID      uuid.UUID `json:"option_id"`
	CurrentState  string    `json:"current_state"`
	PreviousState string    `json:"previous_state"`
	CreatedAt     time.Time `json:"created_at"`
	UpdatedAt     time.Time `json:"updated_at"`
}

type EmContact struct {
	ID           uuid.UUID `json:"id"`
	UserID       uuid.UUID `json:"user_id"`
	Name         string    `json:"name"`
	Relationship string    `json:"relationship"`
	Email        string    `json:"email"`
	DialCode     string    `json:"dial_code"`
	DialCountry  string    `json:"dial_country"`
	PhoneNumber  string    `json:"phone_number"`
	Language     string    `json:"language"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}

type Entry struct {
	ID        uuid.UUID `json:"id"`
	AccountID uuid.UUID `json:"account_id"`
	Amount    int64     `json:"amount"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type EventCheckInStep struct {
	ID              uuid.UUID `json:"id"`
	EventDateTimeID uuid.UUID `json:"event_date_time_id"`
	Photo           string    `json:"photo"`
	Des             string    `json:"des"`
	CreatedAt       time.Time `json:"created_at"`
	UpdatedAt       time.Time `json:"updated_at"`
}

type EventDateDetail struct {
	EventDateTimeID uuid.UUID `json:"event_date_time_id"`
	StartTime       string    `json:"start_time"`
	EndTime         string    `json:"end_time"`
	TimeZone        string    `json:"time_zone"`
	CreatedAt       time.Time `json:"created_at"`
	UpdatedAt       time.Time `json:"updated_at"`
}

type EventDateLocation struct {
	EventDateTimeID uuid.UUID    `json:"event_date_time_id"`
	Street          string       `json:"street"`
	City            string       `json:"city"`
	State           string       `json:"state"`
	Country         string       `json:"country"`
	Postcode        string       `json:"postcode"`
	Geolocation     pgtype.Point `json:"geolocation"`
	CreatedAt       time.Time    `json:"created_at"`
	UpdatedAt       time.Time    `json:"updated_at"`
}

type EventDatePrivateAudience struct {
	ID              uuid.UUID `json:"id"`
	EventDateTimeID uuid.UUID `json:"event_date_time_id"`
	Name            string    `json:"name"`
	Type            string    `json:"type"`
	Email           string    `json:"email"`
	Number          string    `json:"number"`
	Sent            bool      `json:"sent"`
	CreatedAt       time.Time `json:"created_at"`
	UpdatedAt       time.Time `json:"updated_at"`
}

type EventDatePublish struct {
	EventDateTimeID      uuid.UUID `json:"event_date_time_id"`
	EventPublic          string    `json:"event_public"`
	EventGoingPublic     string    `json:"event_going_public"`
	EventGoingPublicDate time.Time `json:"event_going_public_date"`
	EventGoingPublicTime time.Time `json:"event_going_public_time"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
}

type EventDateTicket struct {
	ID              uuid.UUID `json:"id"`
	EventDateTimeID uuid.UUID `json:"event_date_time_id"`
	StartDate       time.Time `json:"start_date"`
	EndDate         time.Time `json:"end_date"`
	StartTime       time.Time `json:"start_time"`
	EndTime         time.Time `json:"end_time"`
	DeepLinkID      uuid.UUID `json:"deep_link_id"`
	Name            string    `json:"name"`
	IsActive        bool      `json:"is_active"`
	Price           int64     `json:"price"`
	AbsorbFees      bool      `json:"absorb_fees"`
	Description     string    `json:"description"`
	Capacity        int32     `json:"capacity"`
	CapacitySold    int32     `json:"capacity_sold"`
	Type            string    `json:"type"`
	Level           string    `json:"level"`
	TicketType      string    `json:"ticket_type"`
	NumOfSeats      int32     `json:"num_of_seats"`
	FreeRefreshment bool      `json:"free_refreshment"`
	CreatedAt       time.Time `json:"created_at"`
	UpdatedAt       time.Time `json:"updated_at"`
}

type EventDateTime struct {
	ID                  uuid.UUID `json:"id"`
	EventInfoID         uuid.UUID `json:"event_info_id"`
	StartDate           time.Time `json:"start_date"`
	Name                string    `json:"name"`
	PublishCheckInSteps bool      `json:"publish_check_in_steps"`
	CheckInMethod       string    `json:"check_in_method"`
	EventDates          []string  `json:"event_dates"`
	DeepLinkID          uuid.UUID `json:"deep_link_id"`
	Type                string    `json:"type"`
	IsActive            bool      `json:"is_active"`
	NeedBands           bool      `json:"need_bands"`
	NeedTickets         bool      `json:"need_tickets"`
	AbsorbBandCharge    bool      `json:"absorb_band_charge"`
	Status              string    `json:"status"`
	Note                string    `json:"note"`
	EndDate             time.Time `json:"end_date"`
	CreatedAt           time.Time `json:"created_at"`
	UpdatedAt           time.Time `json:"updated_at"`
}

type EventInfo struct {
	OptionID        uuid.UUID `json:"option_id"`
	SubCategoryType string    `json:"sub_category_type"`
	EventType       string    `json:"event_type"`
	CreatedAt       time.Time `json:"created_at"`
	UpdatedAt       time.Time `json:"updated_at"`
}

type EventReferenceInfo struct {
	EventChargeID     uuid.UUID `json:"event_charge_id"`
	EventDateLocation string    `json:"event_date_location"`
	EventInfo         string    `json:"event_info"`
	EventDateTimes    string    `json:"event_date_times"`
	CancelPolicyOne   string    `json:"cancel_policy_one"`
	CancelPolicyTwo   string    `json:"cancel_policy_two"`
	EventDateDetails  string    `json:"event_date_details"`
	HostAsIndividual  bool      `json:"host_as_individual"`
	OrganizationName  string    `json:"organization_name"`
	CreatedAt         time.Time `json:"created_at"`
	UpdatedAt         time.Time `json:"updated_at"`
}

type EventsInfosCategory struct {
	OptionID     uuid.UUID `json:"option_id"`
	EventType    []string  `json:"event_type"`
	EventSubType []string  `json:"event_sub_type"`
	Highlight    []string  `json:"highlight"`
	Des          []string  `json:"des"`
	Name         []string  `json:"name"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}

type Feedback struct {
	ID         uuid.UUID `json:"id"`
	UserID     uuid.UUID `json:"user_id"`
	Subject    string    `json:"subject"`
	SubSubject string    `json:"sub_subject"`
	Detail     string    `json:"detail"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
}

type Help struct {
	ID         uuid.UUID `json:"id"`
	Email      string    `json:"email"`
	Subject    string    `json:"subject"`
	SubSubject string    `json:"sub_subject"`
	Detail     string    `json:"detail"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
}

type Identity struct {
	UserID          uuid.UUID `json:"user_id"`
	Country         string    `json:"country"`
	Type            string    `json:"type"`
	IDPhoto         string    `json:"id_photo"`
	IDPhotoList     []string  `json:"id_photo_list"`
	IDBackPhoto     string    `json:"id_back_photo"`
	IDBackPhotoList []string  `json:"id_back_photo_list"`
	FacialPhoto     string    `json:"facial_photo"`
	FacialPhotoList []string  `json:"facial_photo_list"`
	Status          string    `json:"status"`
	IsVerified      bool      `json:"is_verified"`
	CreatedAt       time.Time `json:"created_at"`
	UpdatedAt       time.Time `json:"updated_at"`
}

type Location struct {
	OptionID             uuid.UUID    `json:"option_id"`
	Street               string       `json:"street"`
	City                 string       `json:"city"`
	State                string       `json:"state"`
	Country              string       `json:"country"`
	Postcode             string       `json:"postcode"`
	Geolocation          pgtype.Point `json:"geolocation"`
	ShowSpecificLocation bool         `json:"show_specific_location"`
	CreatedAt            time.Time    `json:"created_at"`
	UpdatedAt            time.Time    `json:"updated_at"`
}

type MailingAddress struct {
	ID          uuid.UUID    `json:"id"`
	UserID      uuid.UUID    `json:"user_id"`
	Street      string       `json:"street"`
	City        string       `json:"city"`
	State       string       `json:"state"`
	Country     string       `json:"country"`
	Postcode    string       `json:"postcode"`
	Geolocation pgtype.Point `json:"geolocation"`
	CreatedAt   time.Time    `json:"created_at"`
	UpdatedAt   time.Time    `json:"updated_at"`
}

type MainPayout struct {
	ChargeID      uuid.UUID `json:"charge_id"`
	Type          string    `json:"type"`
	Amount        int64     `json:"amount"`
	TimePaid      time.Time `json:"time_paid"`
	ServiceFee    int64     `json:"service_fee"`
	Currency      string    `json:"currency"`
	AccountNumber string    `json:"account_number"`
	IsComplete    bool      `json:"is_complete"`
	CreatedAt     time.Time `json:"created_at"`
	UpdatedAt     time.Time `json:"updated_at"`
}

type MainRefund struct {
	ChargeID    uuid.UUID `json:"charge_id"`
	UserPercent int32     `json:"user_percent"`
	HostPercent int32     `json:"host_percent"`
	ChargeType  string    `json:"charge_type"`
	Type        string    `json:"type"`
	IsPayed     bool      `json:"is_payed"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

type Message struct {
	ID         uuid.UUID `json:"id"`
	MsgID      uuid.UUID `json:"msg_id"`
	SenderID   uuid.UUID `json:"sender_id"`
	ReceiverID uuid.UUID `json:"receiver_id"`
	Message    string    `json:"message"`
	Type       string    `json:"type"`
	Read       bool      `json:"read"`
	Photo      string    `json:"photo"`
	ParentID   string    `json:"parent_id"`
	Reference  string    `json:"reference"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
}

type Notification struct {
	ID         uuid.UUID `json:"id"`
	Header     string    `json:"header"`
	ItemID     uuid.UUID `json:"item_id"`
	ItemIDFake bool      `json:"item_id_fake"`
	UserID     uuid.UUID `json:"user_id"`
	Type       string    `json:"type"`
	Message    string    `json:"message"`
	Handled    bool      `json:"handled"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
}

type OptionAddCharge struct {
	ID         uuid.UUID `json:"id"`
	OptionID   uuid.UUID `json:"option_id"`
	Type       string    `json:"type"`
	MainFee    int64     `json:"main_fee"`
	ExtraFee   int64     `json:"extra_fee"`
	NumOfGuest int32     `json:"num_of_guest"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
}

type OptionAvailabilitySetting struct {
	OptionID               uuid.UUID `json:"option_id"`
	AdvanceNotice          string    `json:"advance_notice"`
	AutoBlockDates         bool      `json:"auto_block_dates"`
	AdvanceNoticeCondition string    `json:"advance_notice_condition"`
	PreparationTime        string    `json:"preparation_time"`
	AvailabilityWindow     string    `json:"availability_window"`
	CreatedAt              time.Time `json:"created_at"`
	UpdatedAt              time.Time `json:"updated_at"`
}

type OptionBookMethod struct {
	OptionID         uuid.UUID `json:"option_id"`
	InstantBook      bool      `json:"instant_book"`
	IdentityVerified bool      `json:"identity_verified"`
	GoodTrackRecord  bool      `json:"good_track_record"`
	PreBookMsg       string    `json:"pre_book_msg"`
	CreatedAt        time.Time `json:"created_at"`
	UpdatedAt        time.Time `json:"updated_at"`
}

type OptionCoHost struct {
	ID                  uuid.UUID `json:"id"`
	OptionID            uuid.UUID `json:"option_id"`
	CoUserID            string    `json:"co_user_id"`
	Accepted            bool      `json:"accepted"`
	Email               string    `json:"email"`
	IsActive            bool      `json:"is_active"`
	Reservations        bool      `json:"reservations"`
	Post                bool      `json:"post"`
	ScanCode            bool      `json:"scan_code"`
	Calender            bool      `json:"calender"`
	Insights            bool      `json:"insights"`
	EditOptionInfo      bool      `json:"edit_option_info"`
	EditEventDatesTimes bool      `json:"edit_event_dates_times"`
	EditCoHosts         bool      `json:"edit_co_hosts"`
	CreatedAt           time.Time `json:"created_at"`
	UpdatedAt           time.Time `json:"updated_at"`
}

type OptionDateTime struct {
	ID        uuid.UUID `json:"id"`
	OptionID  uuid.UUID `json:"option_id"`
	Date      time.Time `json:"date"`
	Available bool      `json:"available"`
	Price     int64     `json:"price"`
	Note      string    `json:"note"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type OptionDiscount struct {
	ID        uuid.UUID `json:"id"`
	OptionID  uuid.UUID `json:"option_id"`
	Type      string    `json:"type"`
	MainType  string    `json:"main_type"`
	Percent   int32     `json:"percent"`
	Name      string    `json:"name"`
	ExtraType string    `json:"extra_type"`
	Des       string    `json:"des"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type OptionInvitation struct {
	ID              uuid.UUID `json:"id"`
	OptionID        uuid.UUID `json:"option_id"`
	Message         string    `json:"message"`
	TransportMethod string    `json:"transport_method"`
	UserEmail       string    `json:"user_email"`
	UserPhoneNumber string    `json:"user_phone_number"`
	Type            string    `json:"type"`
	CreatedAt       time.Time `json:"created_at"`
	UpdatedAt       time.Time `json:"updated_at"`
}

type OptionMessage struct {
	ID        uuid.UUID `json:"id"`
	OptionID  uuid.UUID `json:"option_id"`
	UserID    uuid.UUID `json:"user_id"`
	Message   string    `json:"message"`
	Seen      bool      `json:"seen"`
	Type      string    `json:"type"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type OptionQuestion struct {
	OptionID          uuid.UUID    `json:"option_id"`
	HostAsIndividual  bool         `json:"host_as_individual"`
	OrganizationName  string       `json:"organization_name"`
	OrganizationEmail string       `json:"organization_email"`
	LegalRepresents   []string     `json:"legal_represents"`
	Street            string       `json:"street"`
	City              string       `json:"city"`
	State             string       `json:"state"`
	Country           string       `json:"country"`
	Postcode          string       `json:"postcode"`
	Geolocation       pgtype.Point `json:"geolocation"`
	CreatedAt         time.Time    `json:"created_at"`
	UpdatedAt         time.Time    `json:"updated_at"`
}

type OptionReferenceInfo struct {
	OptionChargeID   uuid.UUID `json:"option_charge_id"`
	Amenities        []string  `json:"amenities"`
	SpaceArea        string    `json:"space_area"`
	TimeZone         string    `json:"time_zone"`
	ArriveBefore     string    `json:"arrive_before"`
	ArriveAfter      string    `json:"arrive_after"`
	LeaveBefore      string    `json:"leave_before"`
	CancelPolicyOne  string    `json:"cancel_policy_one"`
	CancelPolicyTwo  string    `json:"cancel_policy_two"`
	PetsAllowed      bool      `json:"pets_allowed"`
	RulesChecked     []string  `json:"rules_checked"`
	RulesUnchecked   []string  `json:"rules_unchecked"`
	Shortlet         string    `json:"shortlet"`
	Location         string    `json:"location"`
	HostAsIndividual bool      `json:"host_as_individual"`
	OrganizationName string    `json:"organization_name"`
	CreatedAt        time.Time `json:"created_at"`
	UpdatedAt        time.Time `json:"updated_at"`
}

type OptionRule struct {
	ID        uuid.UUID `json:"id"`
	OptionID  uuid.UUID `json:"option_id"`
	Checked   bool      `json:"checked"`
	Tag       string    `json:"tag"`
	Type      string    `json:"type"`
	Des       string    `json:"des"`
	StartTime time.Time `json:"start_time"`
	EndTime   time.Time `json:"end_time"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type OptionTripLength struct {
	OptionID                    uuid.UUID `json:"option_id"`
	MinStayDay                  int32     `json:"min_stay_day"`
	MaxStayNight                int32     `json:"max_stay_night"`
	ManualApproveRequestPassMax bool      `json:"manual_approve_request_pass_max"`
	AllowReservationRequest     bool      `json:"allow_reservation_request"`
	CreatedAt                   time.Time `json:"created_at"`
	UpdatedAt                   time.Time `json:"updated_at"`
}

type OptionsExtraInfo struct {
	ID        uuid.UUID `json:"id"`
	OptionID  uuid.UUID `json:"option_id"`
	Type      string    `json:"type"`
	Info      string    `json:"info"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type OptionsInfo struct {
	ID             uuid.UUID `json:"id"`
	CoHostID       uuid.UUID `json:"co_host_id"`
	OptionUserID   uuid.UUID `json:"option_user_id"`
	HostID         uuid.UUID `json:"host_id"`
	DeepLinkID     uuid.UUID `json:"deep_link_id"`
	PrimaryUserID  uuid.UUID `json:"primary_user_id"`
	IsActive       bool      `json:"is_active"`
	IsComplete     bool      `json:"is_complete"`
	IsVerified     bool      `json:"is_verified"`
	Category       string    `json:"category"`
	CategoryTwo    string    `json:"category_two"`
	CategoryThree  string    `json:"category_three"`
	CategoryFour   string    `json:"category_four"`
	IsTopSeller    bool      `json:"is_top_seller"`
	TimeZone       string    `json:"time_zone"`
	Currency       string    `json:"currency"`
	OptionImg      string    `json:"option_img"`
	OptionType     string    `json:"option_type"`
	MainOptionType string    `json:"main_option_type"`
	CreatedAt      time.Time `json:"created_at"`
	Completed      time.Time `json:"completed"`
	UpdatedAt      time.Time `json:"updated_at"`
}

type OptionsInfoDetail struct {
	OptionID              uuid.UUID `json:"option_id"`
	Des                   string    `json:"des"`
	SpaceDes              string    `json:"space_des"`
	GuestAccessDes        string    `json:"guest_access_des"`
	InteractWithGuestsDes string    `json:"interact_with_guests_des"`
	PetsAllowed           bool      `json:"pets_allowed"`
	OtherDes              string    `json:"other_des"`
	NeighborhoodDes       string    `json:"neighborhood_des"`
	GetAroundDes          string    `json:"get_around_des"`
	HostNameOption        string    `json:"host_name_option"`
	OptionHighlight       []string  `json:"option_highlight"`
	CreatedAt             time.Time `json:"created_at"`
	UpdatedAt             time.Time `json:"updated_at"`
}

type OptionsInfoPhoto struct {
	OptionID   uuid.UUID `json:"option_id"`
	CoverImage string    `json:"cover_image"`
	Photo      []string  `json:"photo"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
}

type OptionsInfosCategory struct {
	OptionID       uuid.UUID `json:"option_id"`
	TypeOfShortlet []string  `json:"type_of_shortlet"`
	Amenities      []string  `json:"amenities"`
	Highlight      []string  `json:"highlight"`
	SpaceArea      []string  `json:"space_area"`
	SpaceType      []string  `json:"space_type"`
	Des            []string  `json:"des"`
	Name           []string  `json:"name"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
}

type OptionsInfosStatus struct {
	OptionID        uuid.UUID `json:"option_id"`
	Status          string    `json:"status"`
	StatusReason    string    `json:"status_reason"`
	SnoozeStartDate time.Time `json:"snooze_start_date"`
	SnoozeEndDate   time.Time `json:"snooze_end_date"`
	UnlistReason    string    `json:"unlist_reason"`
	UnlistDes       string    `json:"unlist_des"`
	CreatedAt       time.Time `json:"created_at"`
	UpdatedAt       time.Time `json:"updated_at"`
}

type OptionsPhotoCaption struct {
	ID        uuid.UUID `json:"id"`
	OptionID  uuid.UUID `json:"option_id"`
	PhotoID   string    `json:"photo_id"`
	Caption   string    `json:"caption"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type OptionsPrice struct {
	OptionID     uuid.UUID `json:"option_id"`
	Price        int64     `json:"price"`
	WeekendPrice int64     `json:"weekend_price"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}

type PaymentsGatePay struct {
	ID                   uuid.UUID `json:"id"`
	UserID               uuid.UUID `json:"user_id"`
	TransactionID        int64     `json:"transaction_id"`
	Reference            string    `json:"reference"`
	RequestedAmount      int64     `json:"requested_amount"`
	Amount               int64     `json:"amount"`
	Currency             string    `json:"currency"`
	PaymentGateFee       int64     `json:"payment_gate_fee"`
	WasRefunded          bool      `json:"was_refunded"`
	AuthorizationCode    string    `json:"authorization_code"`
	PaymentGatePaidAt    time.Time `json:"payment_gate_paid_at"`
	Channel              string    `json:"channel"`
	PaymentGateCreatedAt time.Time `json:"payment_gate_created_at"`
	CreatedAt            time.Time `json:"created_at"`
}

type Payout struct {
	ID            uuid.UUID   `json:"id"`
	PayoutIds     []uuid.UUID `json:"payout_ids"`
	UserID        uuid.UUID   `json:"user_id"`
	SendMedium    string      `json:"send_medium"`
	ParentType    string      `json:"parent_type"`
	Amount        int64       `json:"amount"`
	AmountPayed   int64       `json:"amount_payed"`
	AccountNumber string      `json:"account_number"`
	TimePaid      time.Time   `json:"time_paid"`
	TransferCode  string      `json:"transfer_code"`
	IsComplete    bool        `json:"is_complete"`
	CreatedAt     time.Time   `json:"created_at"`
	UpdatedAt     time.Time   `json:"updated_at"`
}

type Refund struct {
	ChargeID    uuid.UUID `json:"charge_id"`
	Reference   string    `json:"reference"`
	SendMedium  string    `json:"send_medium"`
	Amount      int64     `json:"amount"`
	UserID      uuid.UUID `json:"user_id"`
	AmountPayed int64     `json:"amount_payed"`
	TimePaid    time.Time `json:"time_paid"`
	IsComplete  bool      `json:"is_complete"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

type RefundPayout struct {
	ChargeID      uuid.UUID `json:"charge_id"`
	Amount        int64     `json:"amount"`
	ServiceFee    int64     `json:"service_fee"`
	UserID        uuid.UUID `json:"user_id"`
	TimePaid      time.Time `json:"time_paid"`
	Currency      string    `json:"currency"`
	AccountNumber string    `json:"account_number"`
	IsComplete    bool      `json:"is_complete"`
	CreatedAt     time.Time `json:"created_at"`
	UpdatedAt     time.Time `json:"updated_at"`
}

type ReportOption struct {
	ID           uuid.UUID `json:"id"`
	OptionUserID uuid.UUID `json:"option_user_id"`
	UserID       uuid.UUID `json:"user_id"`
	TypeOne      string    `json:"type_one"`
	TypeTwo      string    `json:"type_two"`
	TypeThree    string    `json:"type_three"`
	Description  string    `json:"description"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}

type RequestNotify struct {
	MID       uuid.UUID `json:"m_id"`
	StartDate string    `json:"start_date"`
	EndDate   string    `json:"end_date"`
	HasPrice  bool      `json:"has_price"`
	SamePrice bool      `json:"same_price"`
	Price     int64     `json:"price"`
	ItemID    string    `json:"item_id"`
	Approved  bool      `json:"approved"`
	Cancelled bool      `json:"cancelled"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type ScannedCharge struct {
	ChargeID    uuid.UUID `json:"charge_id"`
	Scanned     bool      `json:"scanned"`
	ScannedBy   uuid.UUID `json:"scanned_by"`
	ScannedTime time.Time `json:"scanned_time"`
	ChargeType  string    `json:"charge_type"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	Username     string    `json:"username"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Shortlet struct {
	OptionID            uuid.UUID `json:"option_id"`
	SpaceType           string    `json:"space_type"`
	AnySpaceShared      bool      `json:"any_space_shared"`
	GuestWelcomed       int32     `json:"guest_welcomed"`
	PublishCheckInSteps bool      `json:"publish_check_in_steps"`
	YearBuilt           int32     `json:"year_built"`
	CheckInMethod       string    `json:"check_in_method"`
	CheckInMethodDes    string    `json:"check_in_method_des"`
	PropertySize        int32     `json:"property_size"`
	SharedSpacesWith    []string  `json:"shared_spaces_with"`
	PropertySizeUnit    string    `json:"property_size_unit"`
	TypeOfShortlet      string    `json:"type_of_shortlet"`
	CreatedAt           time.Time `json:"created_at"`
	UpdatedAt           time.Time `json:"updated_at"`
}

type SingleRoom struct {
	ID        uuid.UUID `json:"id"`
	UserOne   uuid.UUID `json:"user_one"`
	UserTwo   uuid.UUID `json:"user_two"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type SpaceArea struct {
	ID          uuid.UUID `json:"id"`
	OptionID    uuid.UUID `json:"option_id"`
	SharedSpace bool      `json:"shared_space"`
	SpaceType   string    `json:"space_type"`
	Photos      []string  `json:"photos"`
	Beds        []string  `json:"beds"`
	IsSuite     bool      `json:"is_suite"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

type ThingsToNote struct {
	ID        uuid.UUID `json:"id"`
	OptionID  uuid.UUID `json:"option_id"`
	Checked   bool      `json:"checked"`
	Tag       string    `json:"tag"`
	Type      string    `json:"type"`
	Des       string    `json:"des"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type Transfer struct {
	ID               uuid.UUID `json:"id"`
	FromAccountID    uuid.UUID `json:"from_account_id"`
	ToAccountID      uuid.UUID `json:"to_account_id"`
	FromAccountIDInt int64     `json:"from_account_id_int"`
	ToAccountIDInt   int64     `json:"to_account_id_int"`
	Amount           int64     `json:"amount"`
	CreatedAt        time.Time `json:"created_at"`
	UpdatedAt        time.Time `json:"updated_at"`
}

type User struct {
	ID                uuid.UUID `json:"id"`
	UserID            uuid.UUID `json:"user_id"`
	FirebaseID        uuid.UUID `json:"firebase_id"`
	PublicID          uuid.UUID `json:"public_id"`
	HashedPassword    string    `json:"hashed_password"`
	DeepLinkID        uuid.UUID `json:"deep_link_id"`
	FirebasePassword  string    `json:"firebase_password"`
	Email             string    `json:"email"`
	PhoneNumber       string    `json:"phone_number"`
	FirstName         string    `json:"first_name"`
	Username          string    `json:"username"`
	LastName          string    `json:"last_name"`
	DateOfBirth       time.Time `json:"date_of_birth"`
	DialCode          string    `json:"dial_code"`
	DialCountry       string    `json:"dial_country"`
	CurrentOptionID   string    `json:"current_option_id"`
	Currency          string    `json:"currency"`
	DefaultCard       string    `json:"default_card"`
	DefaultPayoutCard string    `json:"default_payout_card"`
	DefaultAccountID  string    `json:"default_account_id"`
	IsActive          bool      `json:"is_active"`
	IsDeleted         bool      `json:"is_deleted"`
	Photo             string    `json:"photo"`
	PasswordChangedAt time.Time `json:"password_changed_at"`
	CreatedAt         time.Time `json:"created_at"`
	UpdatedAt         time.Time `json:"updated_at"`
}

type UserApnDetail struct {
	ID                  uuid.UUID `json:"id"`
	UserID              uuid.UUID `json:"user_id"`
	DeviceName          string    `json:"device_name"`
	Model               string    `json:"model"`
	IdentifierForVendor string    `json:"identifier_for_vendor"`
	Token               string    `json:"token"`
	CreatedAt           time.Time `json:"created_at"`
	UpdatedAt           time.Time `json:"updated_at"`
}

type UsersLocation struct {
	UserID      uuid.UUID    `json:"user_id"`
	Street      string       `json:"street"`
	City        string       `json:"city"`
	State       string       `json:"state"`
	Country     string       `json:"country"`
	Postcode    string       `json:"postcode"`
	Geolocation pgtype.Point `json:"geolocation"`
	CreatedAt   time.Time    `json:"created_at"`
	UpdatedAt   time.Time    `json:"updated_at"`
}

type UsersOptionsReview struct {
	ID            uuid.UUID `json:"id"`
	OptionUserID  uuid.UUID `json:"option_user_id"`
	UserID        uuid.UUID `json:"user_id"`
	Message       string    `json:"message"`
	Clean         float64   `json:"clean"`
	Communication float64   `json:"communication"`
	HouseRules    float64   `json:"house_rules"`
	CreatedAt     time.Time `json:"created_at"`
	UpdatedAt     time.Time `json:"updated_at"`
}

type UsersProfile struct {
	UserID    uuid.UUID `json:"user_id"`
	Work      string    `json:"work"`
	Languages []string  `json:"languages"`
	Bio       string    `json:"bio"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type Vid struct {
	ID                uuid.UUID `json:"id"`
	Path              string    `json:"path"`
	Filter            string    `json:"filter"`
	OptionUserID      uuid.UUID `json:"option_user_id"`
	UserID            uuid.UUID `json:"user_id"`
	MainOptionType    string    `json:"main_option_type"`
	StartDate         string    `json:"start_date"`
	Caption           string    `json:"caption"`
	FromWho           string    `json:"from_who"`
	ExtraOptionID     uuid.UUID `json:"extra_option_id"`
	ExtraOptionIDFake bool      `json:"extra_option_id_fake"`
	IsActive          bool      `json:"is_active"`
	CreatedAt         time.Time `json:"created_at"`
	UpdatedAt         time.Time `json:"updated_at"`
}

type WifiDetail struct {
	OptionID    uuid.UUID `json:"option_id"`
	NetworkName string    `json:"network_name"`
	Password    string    `json:"password"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

type Wishlist struct {
	ID        uuid.UUID `json:"id"`
	UserID    uuid.UUID `json:"user_id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type WishlistsItem struct {
	ID           uuid.UUID `json:"id"`
	WishlistID   uuid.UUID `json:"wishlist_id"`
	OptionUserID uuid.UUID `json:"option_user_id"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}
