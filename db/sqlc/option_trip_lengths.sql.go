// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: option_trip_lengths.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createOptionTripLength = `-- name: CreateOptionTripLength :one
INSERT INTO option_trip_lengths (
    option_id
) VALUES (
    $1
) RETURNING option_id
`

func (q *Queries) CreateOptionTripLength(ctx context.Context, optionID uuid.UUID) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, createOptionTripLength, optionID)
	var option_id uuid.UUID
	err := row.Scan(&option_id)
	return option_id, err
}

const getOptionTripLength = `-- name: GetOptionTripLength :one
SELECT min_stay_day, max_stay_night, manual_approve_request_pass_max, allow_reservation_request
FROM option_trip_lengths
WHERE option_id = $1
`

type GetOptionTripLengthRow struct {
	MinStayDay                  int32 `json:"min_stay_day"`
	MaxStayNight                int32 `json:"max_stay_night"`
	ManualApproveRequestPassMax bool  `json:"manual_approve_request_pass_max"`
	AllowReservationRequest     bool  `json:"allow_reservation_request"`
}

func (q *Queries) GetOptionTripLength(ctx context.Context, optionID uuid.UUID) (GetOptionTripLengthRow, error) {
	row := q.db.QueryRow(ctx, getOptionTripLength, optionID)
	var i GetOptionTripLengthRow
	err := row.Scan(
		&i.MinStayDay,
		&i.MaxStayNight,
		&i.ManualApproveRequestPassMax,
		&i.AllowReservationRequest,
	)
	return i, err
}

const removeOptionTripLength = `-- name: RemoveOptionTripLength :exec
DELETE FROM option_trip_lengths
WHERE option_id = $1
`

func (q *Queries) RemoveOptionTripLength(ctx context.Context, optionID uuid.UUID) error {
	_, err := q.db.Exec(ctx, removeOptionTripLength, optionID)
	return err
}

const updateOptionTripLength = `-- name: UpdateOptionTripLength :one
UPDATE option_trip_lengths 
SET
    min_stay_day = $1,
    max_stay_night = $2,
    manual_approve_request_pass_max = $3,
    allow_reservation_request = $4,
    updated_at = NOW()
WHERE option_id = $5
RETURNING min_stay_day, max_stay_night, manual_approve_request_pass_max, allow_reservation_request
`

type UpdateOptionTripLengthParams struct {
	MinStayDay                  int32     `json:"min_stay_day"`
	MaxStayNight                int32     `json:"max_stay_night"`
	ManualApproveRequestPassMax bool      `json:"manual_approve_request_pass_max"`
	AllowReservationRequest     bool      `json:"allow_reservation_request"`
	OptionID                    uuid.UUID `json:"option_id"`
}

type UpdateOptionTripLengthRow struct {
	MinStayDay                  int32 `json:"min_stay_day"`
	MaxStayNight                int32 `json:"max_stay_night"`
	ManualApproveRequestPassMax bool  `json:"manual_approve_request_pass_max"`
	AllowReservationRequest     bool  `json:"allow_reservation_request"`
}

func (q *Queries) UpdateOptionTripLength(ctx context.Context, arg UpdateOptionTripLengthParams) (UpdateOptionTripLengthRow, error) {
	row := q.db.QueryRow(ctx, updateOptionTripLength,
		arg.MinStayDay,
		arg.MaxStayNight,
		arg.ManualApproveRequestPassMax,
		arg.AllowReservationRequest,
		arg.OptionID,
	)
	var i UpdateOptionTripLengthRow
	err := row.Scan(
		&i.MinStayDay,
		&i.MaxStayNight,
		&i.ManualApproveRequestPassMax,
		&i.AllowReservationRequest,
	)
	return i, err
}
