// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: cancellations.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createCancellation = `-- name: CreateCancellation :one
INSERT INTO cancellations (
    charge_id,
    charge_type,
    type,
    cancel_user_id,
    reason_one,
    reason_two,
    main_option_type,
    message
) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
RETURNING charge_id
`

type CreateCancellationParams struct {
	ChargeID       uuid.UUID `json:"charge_id"`
	ChargeType     string    `json:"charge_type"`
	Type           string    `json:"type"`
	CancelUserID   uuid.UUID `json:"cancel_user_id"`
	ReasonOne      string    `json:"reason_one"`
	ReasonTwo      string    `json:"reason_two"`
	MainOptionType string    `json:"main_option_type"`
	Message        string    `json:"message"`
}

func (q *Queries) CreateCancellation(ctx context.Context, arg CreateCancellationParams) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, createCancellation,
		arg.ChargeID,
		arg.ChargeType,
		arg.Type,
		arg.CancelUserID,
		arg.ReasonOne,
		arg.ReasonTwo,
		arg.MainOptionType,
		arg.Message,
	)
	var charge_id uuid.UUID
	err := row.Scan(&charge_id)
	return charge_id, err
}
